<refentry id="gsf-Outfile-writing-structed-files">
<refmeta>
<refentrytitle role="top_of_page" id="gsf-Outfile-writing-structed-files.top_of_page">Outfile writing structed files</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GSF Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Outfile writing structed files</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="gsf-Outfile-writing-structed-files.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="GsfOutfile"/>
<synopsis>
                    <link linkend="GsfOutfile-struct">GsfOutfile</link>;
<link linkend="GsfOutput">GsfOutput</link>*          <link linkend="gsf-outfile-new-child">gsf_outfile_new_child</link>               (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir);
<link linkend="GsfOutput">GsfOutput</link>*          <link linkend="gsf-outfile-new-child-full">gsf_outfile_new_child_full</link>          (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir,
                                                         <link linkend="char">char</link> const *first_property_name,
                                                         ...);
<link linkend="GsfOutput">GsfOutput</link>*          <link linkend="gsf-outfile-new-child-varg">gsf_outfile_new_child_varg</link>          (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir,
                                                         <link linkend="char">char</link> const *first_property_name,
                                                         <link linkend="va-list">va_list</link> args);
</synopsis>
</refsynopsisdiv>

<refsect1 id="gsf-Outfile-writing-structed-files.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GsfOutput">GsfOutput</link>
         +----GsfOutfile
               +----<link linkend="GsfOutfileMSOle">GsfOutfileMSOle</link>
               +----<link linkend="GsfOutfileStdio">GsfOutfileStdio</link>
               +----<link linkend="GsfOutfileZip">GsfOutfileZip</link>
</synopsis>

</refsect1>








<refsect1 id="gsf-Outfile-writing-structed-files.description" role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 id="gsf-Outfile-writing-structed-files.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GsfOutfile-struct" role="struct">
<title>GsfOutfile</title>
<indexterm zone="GsfOutfile-struct"><primary>GsfOutfile</primary></indexterm><programlisting>typedef struct _GsfOutfile GsfOutfile;</programlisting>
<para>
Class representing an output file, counterpart to <link linkend="GsfInfile"><type>GsfInfile</type></link>.</para>
<para>

</para></refsect2>
<refsect2 id="gsf-outfile-new-child" role="function">
<title>gsf_outfile_new_child ()</title>
<indexterm zone="gsf-outfile-new-child"><primary>gsf_outfile_new_child</primary></indexterm><programlisting><link linkend="GsfOutput">GsfOutput</link>*          gsf_outfile_new_child               (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>outfile</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GsfOutfile"><type>GsfOutfile</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> The name of the new child to create
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_dir</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> to create a directory, <link linkend="FALSE:CAPS"><literal>FALSE</literal></link> to create a plain file
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly created child
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gsf-outfile-new-child-full" role="function">
<title>gsf_outfile_new_child_full ()</title>
<indexterm zone="gsf-outfile-new-child-full"><primary>gsf_outfile_new_child_full</primary></indexterm><programlisting><link linkend="GsfOutput">GsfOutput</link>*          gsf_outfile_new_child_full          (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir,
                                                         <link linkend="char">char</link> const *first_property_name,
                                                         ...);</programlisting>
<para>
</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>outfile</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GsfOutfile"><type>GsfOutfile</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> The name of the new child to create
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_dir</parameter>&nbsp;:</term>
<listitem><simpara> TRUE to create a directory, FALSE to create a plain file
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_property_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>...</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a newly created child
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="gsf-outfile-new-child-varg" role="function">
<title>gsf_outfile_new_child_varg ()</title>
<indexterm zone="gsf-outfile-new-child-varg"><primary>gsf_outfile_new_child_varg</primary></indexterm><programlisting><link linkend="GsfOutput">GsfOutput</link>*          gsf_outfile_new_child_varg          (<link linkend="GsfOutfile">GsfOutfile</link> *outfile,
                                                         <link linkend="char">char</link> const *name,
                                                         <link linkend="gboolean">gboolean</link> is_dir,
                                                         <link linkend="char">char</link> const *first_property_name,
                                                         <link linkend="va-list">va_list</link> args);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>outfile</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_dir</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>first_property_name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>args</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
